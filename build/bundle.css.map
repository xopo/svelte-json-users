{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "User.svelte",
    "Users.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { users } from  './data-users';\n    export let key;\n    export let user;\n    export let errors;\n\n    let undo = false;\n    let double = false;\n    let counter = 3;\n\n    let countDown;\n    let timeOut;\n\n    const deleteUser = () => {\n        undo=true;\n        countDown = setInterval(() => {\n            counter = counter - 1;\n            if (counter <= 0) {\n                clearInterval(countDown);\n                counter = 3;\n            }\n        }, 1000);\n\n        timeOut = setTimeout(() => {\n            if (undo) {\n                delete $users[key];\n                $users = $users;\n                undo=false;\n            }\n        }, 3000);\n    }\n    const undoDeleteUser = () => {\n        undo = false;\n        counter = 3;\n        clearInterval(countDown);\n        clearTimeout(timeOut);\n    }\n\n    const checkForDouble = () => {\n        double = Object.values($users).some(stored => stored.name === user.name && stored.id !== user.id);\n        errors = double;\n    }\n</script>\n\n<!--  ########################################################################################  -->\n\n<style>\n    .user {\n        display: grid;\n        grid-template-columns: 2fr 5fr 2fr;\n        grid-gap: 10px;\n        padding-left: 5px;\n    }\n    input {\n        width: 100%;\n        border: 1px solid gray;\n        outline: none;\n        padding-left: .5em;\n    }\n\n    button {\n        outline: none;\n        border: none;\n        border-radius: 10px;\n        cursor: pointer;\n        padding: 5px;\n    }\n    \n    .double, .double >input, .double>button {\n        color: red;\n    }\n</style>\n\n<!--  ########################################################################################  -->\n\n<div class=\"user\" class:double>\n    <div>{key}</div>\n    <input type=\"text\" bind:value={user.name} on:keyup={checkForDouble} autofocus>\n    {#if !undo}\n        <button on:click={deleteUser}> üóëÔ∏è Delete</button>\n    {:else}\n        <button on:click={undoDeleteUser}>Undo ({counter})</button>\n    {/if}\n</div>",
    "<script>\n    import { users } from './data-users';\n    import User from './User.svelte';\n    \n    let errors = false;\n    \n    const addUser = () => {\n        const id = Math.round(Math.random() * 1000);\n        let name='';\n        $users[`ID${id}`] = {id, name};\n    }    \n\n</script>\n\n<!--  ########################################################################################  -->\n\n<style>\n    #users {\n        display: grid;\n        grid-gap: 10px;\n        padding: 10px;\n    }\n\n    button {\n        outline: none;\n        border: none;\n        border-radius: 10px;\n        cursor: pointer;\n        padding: 15px;\n        border: 1px solid gray;\n    }\n\n</style>\n\n<!--  ########################################################################################  -->\n\n<div id=\"users\">\n    {#each Object.keys($users) as key}\n        <User {key} bind:user={$users[key]} bind:errors/>\n    {/each}\n    <button on:click={addUser} disabled={errors}>Add user</button>\n    <pre>\n        {JSON.stringify([$users, errors], null, 2)}\n    </pre>\n</div>"
  ],
  "names": [],
  "mappings": "AA+CI,KAAK,8BAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAClC,QAAQ,CAAE,IAAI,CACd,YAAY,CAAE,GAAG,AACrB,CAAC,AACD,KAAK,8BAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,IAAI,AACtB,CAAC,AAED,MAAM,8BAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,qCAAO,CAAE,sBAAO,CAAE,oBAAK,CAAE,sBAAO,CAAC,MAAM,eAAC,CAAC,AACrC,KAAK,CAAE,GAAG,AACd,CAAC;ACrDD,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC1B,CAAC"
}